{"ast":null,"code":"var _jsxFileName = \"D:\\\\Odoo 2\\\\OdooHack\\\\expense-management-app\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport { socketService } from '../services/socketService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isLoading: true,\n  isAuthenticated: false\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'AUTH_START':\n      return {\n        ...state,\n        isLoading: true\n      };\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case 'AUTH_FAILURE':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          dispatch({\n            type: 'AUTH_START'\n          });\n\n          // Set the token in auth service\n          authService.setToken(token);\n\n          // Get current user\n          const userData = await authService.getCurrentUser();\n          dispatch({\n            type: 'AUTH_SUCCESS',\n            payload: {\n              user: userData.user,\n              token\n            }\n          });\n\n          // Connect to socket\n          socketService.connect(token);\n        } catch (error) {\n          console.error('Auth initialization failed:', error);\n          localStorage.removeItem('token');\n          dispatch({\n            type: 'AUTH_FAILURE'\n          });\n        }\n      } else {\n        dispatch({\n          type: 'SET_LOADING',\n          payload: false\n        });\n      }\n    };\n    initializeAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      dispatch({\n        type: 'AUTH_START'\n      });\n      const response = await authService.login(credentials);\n\n      // Store token\n      localStorage.setItem('token', response.token);\n      authService.setToken(response.token);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: {\n          user: response.user,\n          token: response.token\n        }\n      });\n\n      // Connect to socket\n      socketService.connect(response.token);\n      return response;\n    } catch (error) {\n      dispatch({\n        type: 'AUTH_FAILURE'\n      });\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      dispatch({\n        type: 'AUTH_START'\n      });\n      const response = await authService.register(userData);\n\n      // Store token\n      localStorage.setItem('token', response.token);\n      authService.setToken(response.token);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: {\n          user: response.user,\n          token: response.token\n        }\n      });\n\n      // Connect to socket\n      socketService.connect(response.token);\n      return response;\n    } catch (error) {\n      dispatch({\n        type: 'AUTH_FAILURE'\n      });\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('token');\n      authService.removeToken();\n      socketService.disconnect();\n      dispatch({\n        type: 'LOGOUT'\n      });\n    }\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await authService.updateProfile(profileData);\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: response.user\n      });\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const changePassword = async passwordData => {\n    try {\n      const response = await authService.changePassword(passwordData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const value = {\n    user: state.user,\n    token: state.token,\n    isLoading: state.isLoading,\n    isAuthenticated: state.isAuthenticated,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuthContext = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuthContext must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuthContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","socketService","jsxDEV","_jsxDEV","AuthContext","initialState","user","token","localStorage","getItem","isLoading","isAuthenticated","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","initializeAuth","setToken","userData","getCurrentUser","connect","error","console","removeItem","login","credentials","response","setItem","register","logout","removeToken","disconnect","updateProfile","profileData","changePassword","passwordData","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuthContext","_s2","context","Error","$RefreshReg$"],"sources":["D:/Odoo 2/OdooHack/expense-management-app/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authService } from '../services/authService';\r\nimport { socketService } from '../services/socketService';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  isLoading: true,\r\n  isAuthenticated: false,\r\n};\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'AUTH_START':\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case 'AUTH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n      };\r\n    case 'AUTH_FAILURE':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n      };\r\n    case 'UPDATE_USER':\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload },\r\n      };\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (token) {\r\n        try {\r\n          dispatch({ type: 'AUTH_START' });\r\n          \r\n          // Set the token in auth service\r\n          authService.setToken(token);\r\n          \r\n          // Get current user\r\n          const userData = await authService.getCurrentUser();\r\n          \r\n          dispatch({\r\n            type: 'AUTH_SUCCESS',\r\n            payload: {\r\n              user: userData.user,\r\n              token,\r\n            },\r\n          });\r\n\r\n          // Connect to socket\r\n          socketService.connect(token);\r\n        } catch (error) {\r\n          console.error('Auth initialization failed:', error);\r\n          localStorage.removeItem('token');\r\n          dispatch({ type: 'AUTH_FAILURE' });\r\n        }\r\n      } else {\r\n        dispatch({ type: 'SET_LOADING', payload: false });\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      dispatch({ type: 'AUTH_START' });\r\n      \r\n      const response = await authService.login(credentials);\r\n      \r\n      // Store token\r\n      localStorage.setItem('token', response.token);\r\n      authService.setToken(response.token);\r\n      \r\n      dispatch({\r\n        type: 'AUTH_SUCCESS',\r\n        payload: {\r\n          user: response.user,\r\n          token: response.token,\r\n        },\r\n      });\r\n\r\n      // Connect to socket\r\n      socketService.connect(response.token);\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      dispatch({ type: 'AUTH_FAILURE' });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      dispatch({ type: 'AUTH_START' });\r\n      \r\n      const response = await authService.register(userData);\r\n      \r\n      // Store token\r\n      localStorage.setItem('token', response.token);\r\n      authService.setToken(response.token);\r\n      \r\n      dispatch({\r\n        type: 'AUTH_SUCCESS',\r\n        payload: {\r\n          user: response.user,\r\n          token: response.token,\r\n        },\r\n      });\r\n\r\n      // Connect to socket\r\n      socketService.connect(response.token);\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      dispatch({ type: 'AUTH_FAILURE' });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await authService.logout();\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      localStorage.removeItem('token');\r\n      authService.removeToken();\r\n      socketService.disconnect();\r\n      dispatch({ type: 'LOGOUT' });\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await authService.updateProfile(profileData);\r\n      \r\n      dispatch({\r\n        type: 'UPDATE_USER',\r\n        payload: response.user,\r\n      });\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const changePassword = async (passwordData) => {\r\n    try {\r\n      const response = await authService.changePassword(passwordData);\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user: state.user,\r\n    token: state.token,\r\n    isLoading: state.isLoading,\r\n    isAuthenticated: state.isAuthenticated,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    changePassword,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuthContext = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuthContext must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}